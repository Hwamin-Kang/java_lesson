JDBC 실습 순서

1. jdbc 라이브러리 추가
	ㄴ 프로젝트 우클릭 -> 메뉴중에 Build Path
	  -> Configure build path...
	  -> Libraries 탭 -> Add External jar
	  -> 파일 ojdbc11. jar 찾아서 추가
	ㄴ 프로젝트 탐색기에 확인 - Referenced Libraries

2. OracleConnectionUtil 클래스 작성

데이터베이스 연결 : Connection 인터페이스 클래스 메소드를 사용
   ㄴ 그 전에 JDBC 드라이버를 메모리에 로드 시켜야 합니다.
        ㄴ Class.forName("패키지명.클래스")
	          ㄴ 오라클 드라이버 클래스
	ㄴ DriverManager.getConnection 메소드 인자 url, user, password db 접속정보를 이용하여
	Connection 객체 생성

3. DBConnectionTest 클래스 작성
- 2번에서 만든 OracleConnectionUtil 클래스 connect() 메소드 테스트
- 정상연결 확인이 되면 SQL insert 실행 테스트

4. InsertTest 클래스

- 3번과 동일한 insert SQL 테스트
- TBL_CUSTOM 테이블에 insert
- PreparedStatement를 이용한다. 실행에 필요한 데이터를 동적 바인딩을 한다. ? 기호 사용.
- PreparedStatement 인터페이스이다. PreparedStatement 타입 참조변수는 PreparedStatement의 추상메소드를 구현한 구현 객체.
	conn.prepareStatement(sql)는 사용하는 오라클 드라이버 클래스를 통해 객체가 생성된다.

5. InsertBuyTest 클래스

- TBL_BUY 테이블에 insert				-- 0705 수업내용


6. SelectTest, SelectTest2, SelectWhereTest 클래스

1) SELECT SQL은 pstmt.executeQuery() 메소드 실행
2) 				실행결과 객체는 ResultSet 타입으로 참조.
3) rs.next() 메소드는 조회 결과 행들을 순서대로 접근한다. 행이 있으면 참, 없으면 거짓 리턴.
4) rs.getXXX()은 특정 컬럼 값 가져오기.

참고 : pstmt.setXXXX()은 SQL 실행에 필요한 값 바인딩(전달)

7. select 결과를 자바에서 저장하기 -> LIST 사용. List<E>, <E>는 제네릭 타입

SelectVoTest 클래스 : 테이블 컬럼과 vo 객체 필드 매핑 예시
SelectListTest 클래스 : 조회 결과 n개 행일 때 while 반복하면서 list.add(vo)

8. DML 위주의 SQL 실행이 반복된다. DML : INSERT, UPDATE, DELETE, SELECT
==> DAO (Database Access Object) 클래스에 자주 사용되는 메소드를 정의.

참고: Dao 클래스를 이용해서 DML 실행 메소드에 필요한 데이터 또는 리턴되는 데이터는 테이블의 컬럼 구성과
같게 VO 클래스를 만들어서 사용했다.
VO(Value Object) : 한 번 저장한 값을 변경하지 않는다.(불변객체) getter 만 사용.
DTO(Data Transfer Object) : 필드값이 변경될 수 있다.(가변객체) getter, setter 둘 다 사용.

9. 외부평가 샘플문제 SQL과 JDBC 풀이
hrd.vo 패키지
	ㄴ MemberVO : 회원매출조회 컬럼항목과 동일하게 한다.
	ㄴ SaleVO
hrd.dao 패키지
	ㄴ HrdDao : 회원목록조회, 회원매출조회
hrd.main 패키지
	ㄴ HrdMain : Dao 실행하기
	
hrd_0712.sql -> sqlplus에서 작성한 것 메모장에 저장해놓기
sqlplus에서 select 출력결과 보기 적정한 설정
SQL > set linesize 100
SQL > set pagesize 10


11. 오라클 CREATE OR REPLACE PROCEDURE 로 정의한 저장(STORED) 프로시저(JDBC)로 실행하기

-proc 패키지 ProcedureTest.java 
